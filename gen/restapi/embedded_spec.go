// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Impact Analysis API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/all-cases": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve all covid cases reported today",
        "tags": [
          "service"
        ],
        "responses": {
          "200": {
            "description": "covid cases retrieved",
            "schema": {
              "type": "object",
              "required": [
                "total_cases",
                "today_date"
              ],
              "properties": {
                "today_date": {
                  "type": "string"
                },
                "total_cases": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/country-cases": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve all covid cases for country",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "country_name",
            "in": "query"
          },
          {
            "pattern": "^\\d{1,2}\\/\\d{1,2}\\/\\d{2}$",
            "type": "string",
            "name": "date_from",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "country covid cases retrieved",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/token": {
      "get": {
        "description": "retrieve token for authenticaton",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The number of migrations to return. Initial value is 1",
            "name": "username",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "token retrieved",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/top-cases-countries": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve top N countries with most reported cases today",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The number of countries to return. Initial value is 1",
            "name": "count",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "top N countries with most covid cases retrieved",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve list of users",
        "tags": [
          "service"
        ],
        "responses": {
          "200": {
            "description": "user retrieved",
            "schema": {
              "type": "object",
              "required": [
                "users"
              ],
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/UnauthorizedError"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "TokenResponse": {
      "type": "object",
      "required": [
        "token",
        "username"
      ],
      "properties": {
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Token is missing or invalid",
      "headers": {
        "WWW_Authenticate": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Impact Analysis API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/all-cases": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve all covid cases reported today",
        "tags": [
          "service"
        ],
        "responses": {
          "200": {
            "description": "covid cases retrieved",
            "schema": {
              "type": "object",
              "required": [
                "total_cases",
                "today_date"
              ],
              "properties": {
                "today_date": {
                  "type": "string"
                },
                "total_cases": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Token is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/country-cases": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve all covid cases for country",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "country_name",
            "in": "query"
          },
          {
            "pattern": "^\\d{1,2}\\/\\d{1,2}\\/\\d{2}$",
            "type": "string",
            "name": "date_from",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "country covid cases retrieved",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Token is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/token": {
      "get": {
        "description": "retrieve token for authenticaton",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "minimum": 1,
            "type": "string",
            "description": "The number of migrations to return. Initial value is 1",
            "name": "username",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "token retrieved",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/top-cases-countries": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve top N countries with most reported cases today",
        "tags": [
          "service"
        ],
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The number of countries to return. Initial value is 1",
            "name": "count",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "top N countries with most covid cases retrieved",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Token is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "BearerToken": []
          }
        ],
        "description": "retrieve list of users",
        "tags": [
          "service"
        ],
        "responses": {
          "200": {
            "description": "user retrieved",
            "schema": {
              "type": "object",
              "required": [
                "users"
              ],
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is missing or invalid",
            "headers": {
              "WWW_Authenticate": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "TokenResponse": {
      "type": "object",
      "required": [
        "token",
        "username"
      ],
      "properties": {
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Token is missing or invalid",
      "headers": {
        "WWW_Authenticate": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
