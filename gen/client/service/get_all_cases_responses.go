// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetAllCasesReader is a Reader for the GetAllCases structure.
type GetAllCasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllCasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllCasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllCasesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllCasesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllCasesOK creates a GetAllCasesOK with default headers values
func NewGetAllCasesOK() *GetAllCasesOK {
	return &GetAllCasesOK{}
}

/* GetAllCasesOK describes a response with status code 200, with default header values.

covid cases retrieved
*/
type GetAllCasesOK struct {
	Payload *GetAllCasesOKBody
}

func (o *GetAllCasesOK) Error() string {
	return fmt.Sprintf("[GET /all-cases][%d] getAllCasesOK  %+v", 200, o.Payload)
}
func (o *GetAllCasesOK) GetPayload() *GetAllCasesOKBody {
	return o.Payload
}

func (o *GetAllCasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAllCasesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllCasesUnauthorized creates a GetAllCasesUnauthorized with default headers values
func NewGetAllCasesUnauthorized() *GetAllCasesUnauthorized {
	return &GetAllCasesUnauthorized{}
}

/* GetAllCasesUnauthorized describes a response with status code 401, with default header values.

Token is missing or invalid
*/
type GetAllCasesUnauthorized struct {
	WWWAuthenticate string
}

func (o *GetAllCasesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /all-cases][%d] getAllCasesUnauthorized ", 401)
}

func (o *GetAllCasesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header WWW_Authenticate
	hdrWWWAuthenticate := response.GetHeader("WWW_Authenticate")

	if hdrWWWAuthenticate != "" {
		o.WWWAuthenticate = hdrWWWAuthenticate
	}

	return nil
}

// NewGetAllCasesInternalServerError creates a GetAllCasesInternalServerError with default headers values
func NewGetAllCasesInternalServerError() *GetAllCasesInternalServerError {
	return &GetAllCasesInternalServerError{}
}

/* GetAllCasesInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type GetAllCasesInternalServerError struct {
}

func (o *GetAllCasesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /all-cases][%d] getAllCasesInternalServerError ", 500)
}

func (o *GetAllCasesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetAllCasesOKBody get all cases o k body
swagger:model GetAllCasesOKBody
*/
type GetAllCasesOKBody struct {

	// today date
	// Required: true
	TodayDate *string `json:"today_date"`

	// total cases
	// Required: true
	TotalCases *string `json:"total_cases"`
}

// Validate validates this get all cases o k body
func (o *GetAllCasesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTodayDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotalCases(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAllCasesOKBody) validateTodayDate(formats strfmt.Registry) error {

	if err := validate.Required("getAllCasesOK"+"."+"today_date", "body", o.TodayDate); err != nil {
		return err
	}

	return nil
}

func (o *GetAllCasesOKBody) validateTotalCases(formats strfmt.Registry) error {

	if err := validate.Required("getAllCasesOK"+"."+"total_cases", "body", o.TotalCases); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get all cases o k body based on context it is used
func (o *GetAllCasesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAllCasesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAllCasesOKBody) UnmarshalBinary(b []byte) error {
	var res GetAllCasesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
